# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy-PROD
on:
  push:
    branches: [master]

env:
  NODE_VERSION: "16.13.2"
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
  ORGANIZATION_USERNAME: ${{ secrets.ORGANIZATION_USERNAME }}
  DESTINATION_REPOSITORY: ${{ secrets.DESTINATION_REPOSITORY }}
  API_TOKEN: ${{ secrets.API_TOKEN }}
  EMAIL: ${{ secrets.EMAIL }}

jobs:
  checkout-and-setup:
    name: üîß Checkout and Setup
    runs-on: ubuntu-latest
    steps:
      - name: "‚òÅÔ∏è Checkout Repository"
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: üîß Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"

  dependency-and-build:
    name: üì¶ Install and Build
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v4
      - name: üì¶ Dependency Injection
        run: |
          npm install -g @angular/cli
          npm install --force
      - name: üìÇ Build
        run: npm run staging

  docker-login:
    name: üê≥ Docker Login
    runs-on: ubuntu-latest
    needs: dependency-and-build
    steps:
      - name: üê≥ Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    environment:
      name: prod-moneystats-angular
    needs: [dependency-and-build, docker-login]
    steps:
      - uses: actions/checkout@v4

      - name: ‚úÖ Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}
          tags: ${{ steps.package-version.outputs.current-version}}, latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          buildArgs: config=prod
          multiPlatform: true
          platform: linux/amd64,linux/arm64
